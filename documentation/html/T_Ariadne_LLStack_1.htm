<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><title>LLStack(T) Class</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/script_prototype.js"> </script><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="T_Ariadne_LLStack_1" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="T:Ariadne.LLStack`1" /><MSHelp:Keyword Index="A" Term="T:Ariadne.LLStack`1" /><MSHelp:Keyword Index="A" Term="frlrfAriadneLLStackClassTopic" /><MSHelp:Keyword Index="A" Term="frlrfAriadneLLStackMembersTopic" /><MSHelp:Keyword Index="K" Term="LLStack%3CT%3E class" /><MSHelp:Keyword Index="K" Term="LLStack(Of T) class" /><MSHelp:Keyword Index="K" Term="Ariadne.LLStack%3CT%3E class" /><MSHelp:Keyword Index="K" Term="Ariadne.LLStack(Of T) class" /><MSHelp:Keyword Index="F" Term="LLStack(T)" /><MSHelp:Keyword Index="F" Term="Ariadne.LLStack(T)" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="Ariadne.dll" /><MSHelp:Attr Name="APIName" Value="Ariadne.LLStack`1" /><MSHelp:Attr Name="Locale" Value="en-us" /></xml></head><body><div id="control"><span class="productTitle">Ariadne</span><br /><span class="topicTitle">LLStack<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span><span class="typeparameter">T</span><span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span> Class</span><br /><div id="toolbar"><span id="chickenFeet"><a href="R_Project.htm">Namespaces</a> ► <a href="N_Ariadne.htm">Ariadne</a> ► <span class="selflink">LLStack<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs">C#</option><option value="VisualBasic vb">Visual Basic</option><option value="ManagedCPlusPlus cpp">Visual C++</option><option value="FSharp fs">F#</option></select></span></div></div><div id="main"><span style="color: DarkGray"><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p></span><div class="summary">A lock-free type-safe stack. This class is included mainly for competion, to allow for
            adoption to framework versions prior to the introduction of <a href="http://msdn2.microsoft.com/en-us/library/dd267331" target="_top">ConcurrentStack<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a>
            and for use as the basis of other algorithms in this library. It does however also offer
            some other functionality.</div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td><td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');">Visual Basic</td><td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td><td class="tab" x-lang="FSharp" onclick="toggleClass('syntaxTabs','x-lang','FSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','FSharp','display','block','none');">F#</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre xml:space="preserve">
[<a href="http://msdn2.microsoft.com/en-us/library/bcfsa90a" target="_top">SerializableAttribute</a>]
<span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">LLStack</span>&lt;T&gt; : <a href="http://msdn2.microsoft.com/en-us/library/92t2ye13" target="_top">ICollection</a>&lt;T&gt;, 
	<a href="http://msdn2.microsoft.com/en-us/library/dd287147" target="_top">IProducerConsumerCollection</a>&lt;T&gt;, <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_top">IEnumerable</a>&lt;T&gt;, <a href="http://msdn2.microsoft.com/en-us/library/b1ht6113" target="_top">ICollection</a>, <a href="http://msdn2.microsoft.com/en-us/library/h1x9x1b1" target="_top">IEnumerable</a>, <a href="http://msdn2.microsoft.com/en-us/library/hdf3zaf2" target="_top">ICloneable</a>, 
	<a href="http://msdn2.microsoft.com/en-us/library/wf4375ks" target="_top">ISerializable</a>
</pre></div><div class="code" x-lang="VisualBasic"><pre xml:space="preserve">
&lt;<a href="http://msdn2.microsoft.com/en-us/library/bcfsa90a" target="_top">SerializableAttribute</a>&gt; _
<span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">LLStack</span>(<span class="keyword">Of</span> T) _
	<span class="keyword">Implements</span> <a href="http://msdn2.microsoft.com/en-us/library/92t2ye13" target="_top">ICollection</a>(<span class="keyword">Of</span> T), <a href="http://msdn2.microsoft.com/en-us/library/dd287147" target="_top">IProducerConsumerCollection</a>(<span class="keyword">Of</span> T),  _
	<a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_top">IEnumerable</a>(<span class="keyword">Of</span> T), <a href="http://msdn2.microsoft.com/en-us/library/b1ht6113" target="_top">ICollection</a>, <a href="http://msdn2.microsoft.com/en-us/library/h1x9x1b1" target="_top">IEnumerable</a>, <a href="http://msdn2.microsoft.com/en-us/library/hdf3zaf2" target="_top">ICloneable</a>, <a href="http://msdn2.microsoft.com/en-us/library/wf4375ks" target="_top">ISerializable</a></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre xml:space="preserve">
[<a href="http://msdn2.microsoft.com/en-us/library/bcfsa90a" target="_top">SerializableAttribute</a>]
<span class="keyword">generic</span>&lt;<span class="keyword">typename</span> T&gt;
<span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">LLStack</span> <span class="keyword">sealed</span> : <a href="http://msdn2.microsoft.com/en-us/library/92t2ye13" target="_top">ICollection</a>&lt;T&gt;, 
	<a href="http://msdn2.microsoft.com/en-us/library/dd287147" target="_top">IProducerConsumerCollection</a>&lt;T&gt;, <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_top">IEnumerable</a>&lt;T&gt;, <a href="http://msdn2.microsoft.com/en-us/library/b1ht6113" target="_top">ICollection</a>, <a href="http://msdn2.microsoft.com/en-us/library/h1x9x1b1" target="_top">IEnumerable</a>, <a href="http://msdn2.microsoft.com/en-us/library/hdf3zaf2" target="_top">ICloneable</a>, 
	<a href="http://msdn2.microsoft.com/en-us/library/wf4375ks" target="_top">ISerializable</a></pre></div><div class="code" x-lang="FSharp"><pre xml:space="preserve">
[&lt;<span class="nolink">SealedAttribute</span>&gt;]
[&lt;<a href="http://msdn2.microsoft.com/en-us/library/bcfsa90a" target="_top">SerializableAttribute</a>&gt;]
<span class="keyword">type</span> <span class="identifier">LLStack</span>&lt;'T&gt; =  
    <span class="keyword">class</span>
        <span class="keyword">interface</span> <a href="http://msdn2.microsoft.com/en-us/library/92t2ye13" target="_top">ICollection</a>&lt;'T&gt;
        <span class="keyword">interface</span> <a href="http://msdn2.microsoft.com/en-us/library/dd287147" target="_top">IProducerConsumerCollection</a>&lt;'T&gt;
        <span class="keyword">interface</span> <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_top">IEnumerable</a>&lt;'T&gt;
        <span class="keyword">interface</span> <a href="http://msdn2.microsoft.com/en-us/library/b1ht6113" target="_top">ICollection</a>
        <span class="keyword">interface</span> <a href="http://msdn2.microsoft.com/en-us/library/h1x9x1b1" target="_top">IEnumerable</a>
        <span class="keyword">interface</span> <a href="http://msdn2.microsoft.com/en-us/library/hdf3zaf2" target="_top">ICloneable</a>
        <span class="keyword">interface</span> <a href="http://msdn2.microsoft.com/en-us/library/wf4375ks" target="_top">ISerializable</a>
    <span class="keyword">end</span></pre></div></div></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Generic Template Parameters</div><div class="sectionContent"><dl><dt><span class="parameter">T</span></dt><dd>The type of the values stored.</dd></dl></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Members</div><div class="sectionContent"><div id="allMembersSection"><table class="filter"><tr class="tabs" id="memberTabs"><td class="tab" value="all" onclick="toggleClass('memberTabs','value','all','activeTab','tab'); processSubgroup('all', 'member'); processList('memberList','filterElement','member');">All Members</td><td class="tab" value="constructor" onclick="toggleClass('memberTabs','value','constructor','activeTab','tab'); processSubgroup('constructor','member');processList('memberList','filterElement','member');">Constructors</td><td class="tab" value="method" onclick="toggleClass('memberTabs','value','method','activeTab','tab'); processSubgroup('method','member'); processList('memberList','filterElement','member');">Methods</td><td class="tab" value="property" onclick="toggleClass('memberTabs','value','property','activeTab','tab'); processSubgroup('property','member'); processList('memberList','filterElement','member');">Properties</td></tr><tr><td class="line" colspan="2"><label for="public"><input id="public" type="checkbox" checked="true" onclick="toggleCheckState('public',this.checked); processList('memberList','filterElement','member');" />Public</label><br /><label for="protected"><input id="protected" type="checkbox" checked="true" onclick="toggleCheckState('protected',this.checked); processList('memberList','filterElement','member');" />Protected</label></td><td class="line" colspan="2"><label for="instance"><input id="instance" type="checkbox" checked="true" onclick="toggleCheckState('instance',this.checked); processList('memberList','filterElement','member');" />Instance</label><br /><label for="static"><input id="static" type="checkbox" checked="true" onclick="toggleCheckState('static',this.checked); processList('memberList','filterElement','member');" />Static</label></td><td class="line" colspan="2"><label for="declared"><input id="declared" type="checkbox" checked="true" onclick="toggleCheckState('declared',this.checked); processList('memberList','filterElement','member');" />Declared</label><br /><label for="inherited"><input id="inherited" type="checkbox" checked="true" onclick="toggleCheckState('inherited',this.checked); processList('memberList','filterElement','member');" />Inherited</label></td></tr></table><table class="members" id="memberList"><tr><th class="iconColumn">Icon</th><th class="nameColumn">Member</th><th class="descriptionColumn">Description</th></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_Ariadne_LLStack_1__ctor.htm">LLStack<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span><span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Creates a new <span class="selflink">LLStack<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></span></div><br /></td></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_Ariadne_LLStack_1__ctor_1.htm">LLStack<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span>(IEnumerable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">Creates a new <span class="selflink">LLStack<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></span> filled from the collection passed to it.</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_Ariadne_LLStack_1_AtomicPopAll.htm">AtomicPopAll<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Clears the stack as an atomic operation, and returns an enumeration of the items so-removed.</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_Ariadne_LLStack_1_Clear.htm">Clear<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Clears the stack as a single atomic operation.</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_Ariadne_LLStack_1_Clone.htm">Clone<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Creates a new stack with the same items as this one.</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_Ariadne_LLStack_1_Contains_1.htm">Contains(T, IEqualityComparer<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">Examines the stack for the presence of an item.</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_Ariadne_LLStack_1_Contains.htm">Contains(T)</a></td><td><div class="summary">Examines the stack for the presence of an item.</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_Ariadne_LLStack_1_CopyTo.htm">CopyTo(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>T<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32)</a></td><td><div class="summary">Copies the contents of the stack to an array.</div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_Ariadne_LLStack_1_Count.htm">Count</a></td><td><div class="summary">Returns the count of the stack.</div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/bsc2ak47" target="_top">Equals(Object)</a></td><td><div class="summary">Determines whether the specified <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_top">Object</a> is equal to the current <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_top">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_top">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_Ariadne_LLStack_1_GetEnumerator.htm">GetEnumerator<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Returns an object that enumerates the stack without removing items.</div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/zdee4b3y" target="_top">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Serves as a hash function for a particular type. </div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_top">Object</a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/dfwy45w9" target="_top">GetType<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Gets the <a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_top">Type</a> of the current instance.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_top">Object</a>.)<br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_Ariadne_LLStack_1_IsEmpty.htm">IsEmpty</a></td><td><div class="summary">Tests whether the stack has no items.</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_Ariadne_LLStack_1_PopAll.htm">PopAll<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Returns an enumerator that removes items from the stack as it returns them.</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_Ariadne_LLStack_1_PopToList.htm">PopToList<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Clears the stack as an atomic operation, and returns a <a href="http://msdn2.microsoft.com/en-us/library/6sh2ey19" target="_top">List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a> of the items removed.</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_Ariadne_LLStack_1_Push.htm">Push(T)</a></td><td><div class="summary">Adds an item to the top of the stack.</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_Ariadne_LLStack_1_PushRange.htm">PushRange(IEnumerable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">Pushes a collection of items to the top of the stack as a single atomic operation.</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_Ariadne_LLStack_1_ToArray.htm">ToArray<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Returns an array of the current items in the stack without removing them.</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_Ariadne_LLStack_1_ToList.htm">ToList<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Returns a <a href="http://msdn2.microsoft.com/en-us/library/6sh2ey19" target="_top">List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a> of the current items in the stack without removing them.</div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/7bxwbwt2" target="_top">ToString<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Returns a <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_top">String</a> that represents the current <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_top">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_top">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_Ariadne_LLStack_1_Transfer.htm">Transfer<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Clears the stack as a single atomic operation, and returns a stack with the same contents as those removed.</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_Ariadne_LLStack_1_TryPeek.htm">TryPeek(T<span class="languageSpecificText"><span class="cpp">%</span></span>)</a></td><td><div class="summary">Attempts to retrieve the item that is currently at the top of the stack, without removing it.</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_Ariadne_LLStack_1_TryPop.htm">TryPop(T<span class="languageSpecificText"><span class="cpp">%</span></span>)</a></td><td><div class="summary">Attempts to pop an item from the top of the stack.</div><br /></td></tr></table></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Inheritance Hierarchy</div><div class="sectionContent"><table cellspacing="0" cellpadding="0"><tr><td colspan="2"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_top">Object</a></td></tr><tr><td><img src="../icons/LastChild.gif" /></td><td><span class="selflink">LLStack<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></span></td></tr></table></div></div><p><div id="footer"><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:jon%40hackcraft.net?Subject=Ariadne">jon@hackcraft.net</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script><p /><a href="https://raw.github.com/hackcraft/Ariadne/master/EUPL-1.1.txt" target="_blank">© 2011-2012 Jon Hanna. Released under the European Union Public Licence v1.1</a></div>Assembly: <span sdata="assembly">Ariadne</span> (Module: Ariadne) Version: 0.1.4385.35780</p></div></body></html>